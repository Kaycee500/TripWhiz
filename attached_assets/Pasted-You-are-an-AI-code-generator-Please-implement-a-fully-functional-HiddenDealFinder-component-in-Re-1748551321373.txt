You are an AI code generator. Please implement a fully-functional `HiddenDealFinder` component in React that replaces the placeholder parameters with real user inputs and pulls live flight deals from a public Flights API (e.g. Skyscanner or Kiwi Tequila). The component must:

1. **Inputs & Props**  
   - Render form fields for:  
     • Departure airport IATA code  
     • Destination airport IATA code  
     • Departure date (YYYY-MM-DD)  
     • Return date (YYYY-MM-DD, optional)  
     • Maximum budget (USD)  
   - Validate inputs (required fields, valid date formats, budget > 0).

2. **API Integration**  
   - Use `fetch` or `axios` to call the chosen Flights API endpoint, passing API key via `process.env.REACT_APP_FLIGHTS_API_KEY`.  
   - Include query parameters for market, currency, originPlace, destinationPlace, outboundDate, inboundDate, and priceCap.  
   - Implement “hidden-city” filtering: after receiving multi-leg flight options, filter any itinerary where the layover airport matches the requested destination and total price ≤ budget.

3. **State Management & UX**  
   - Use React hooks (`useState`, `useEffect`) to manage form state, loading state, error state, and results array.  
   - Show a Tailwind-styled loading spinner while fetching.  
   - Display a friendly error message on network/API failure or zero results.

4. **Results Display**  
   - Render the top 5 deals in responsive Tailwind CSS cards:  
     • Airline logo (if available) or name  
     • Total price (highlighted)  
     • Outbound & return times, total duration, number of stops  
     • “Hidden-city” badge on filtered itineraries  
     • “Book Now” button linking to the direct booking URL returned by the API  
   - Ensure cards wrap on mobile and align in a grid on desktop.

5. **Accessibility & Polishing**  
   - Add `aria-label` and `role="form"` on the form, and `alt` text on images.  
   - Ensure color contrast meets WCAG AA.  
   - Animate the results grid fade-in with Framer Motion (`<motion.div>`).

Produce the complete `HiddenDealFinder.jsx` file, including all necessary imports, environment variable usage, and inline Tailwind classes.  
