You are an AI code generator. Please create a fully-functional React component named `CarryOnOnlyFilter.jsx` that replaces placeholder parameters with real user inputs and pulls live flight data from the Amadeus Self-Service Flight Offers Search API. Use the official Amadeus JS SDK, Tailwind CSS, and Framer Motion. The component must:

1. **Setup & Imports**  
   - Import React, hooks (`useState`, `useEffect`), Amadeus SDK, Framer Motion (`motion`), and a loading spinner component.  
   - Initialize Amadeus client:  
     ```js
     import Amadeus from '@amadeus';
     const amadeus = new Amadeus({
       clientId: process.env.REACT_APP_AMADEUS_CLIENT_ID,
       clientSecret: process.env.REACT_APP_AMADEUS_CLIENT_SECRET
     });
     ```

2. **Form Inputs & Validation**  
   - Render controlled inputs (Tailwind classes) for:  
     • Origin IATA code (3 letters, required)  
     • Destination IATA code (3 letters, required)  
     • Departure date (YYYY-MM-DD, required)  
     • Return date (YYYY-MM-DD, optional)  
   - Validate formats on submit; display inline error messages.

3. **API Call & Filtering**  
   - On form submit, call Amadeus’s Flight Offers Search endpoint:  
     ```js
     const response = await amadeus.shopping.flightOffersSearch.get({
       originLocationCode: origin,
       destinationLocationCode: destination,
       departureDate,
       returnDate,           // omit if not provided
       currencyCode: 'USD',
       adults: '1',
       includedCheckedBagsOnly: false
     });
     ```  
   - From `response.data`, filter offers to only include those where **all segments** have **zero checked bags included** (inspect `offer.itineraries[].segments[].baggage?.includedCheckedBags === 0` or absence of baggage).

   - Sort ascending by price and take the top 5.

4. **State Management & UX**  
   - Use `useState` for `formData`, `loading`, `error`, and `offers`.  
   - Show a Tailwind-styled spinner (`<Spinner />`) while loading.  
   - Display a user-friendly error if the API call fails or if no “carry-on only” offers are found.

5. **Results Display**  
   - Render the top 5 “Carry-On Only” offers in responsive Tailwind cards within a `<motion.div>` fade-in:  
     • Airline name/logo  
     • Total price highlighted  
     • Outbound & return times, stops count  
     • Badge “Carry-On Only” on each card  
     • “Book Now” button linking to the booking URL or Google Flights deep link  
   - Cards stack vertically on mobile, grid on desktop.

6. **Accessibility & Polishing**  
   - Add `role="form"`, `aria-label`, and `aria-invalid` on inputs.  
   - Ensure color contrast meets WCAG AA.  
   - Animate card hover with `whileHover={{ scale: 1.02 }}`.

Generate the complete `CarryOnOnlyFilter.jsx` file with all necessary imports, environment-variable usage, Tailwind classes, Framer Motion code, and inline comments.  
